"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/chat";
exports.ids = ["pages/api/chat"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_chat_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/api/chat.js */ \"(api-node)/./pages/api/chat.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_chat_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/chat\",\n        pathname: \"/api/chat\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_chat_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/chat\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: undefined,\n                multiZoneDraftMode: Boolean(\"false\"),\n                trustHostHeader: undefined,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/chat\",\n                projectDir:  false || '',\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/chat.js":
/*!***************************!*\
  !*** ./pages/api/chat.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n// pages/api/chat.js\n// Response filtering function\nconst filterResponse = (response)=>{\n    const professionalTopics = [\n        'product',\n        'manager',\n        'shazil',\n        'scale',\n        'framework',\n        'experience',\n        'career',\n        'achievement',\n        'team',\n        'leadership',\n        'revenue',\n        'users',\n        'stukent',\n        'halfort',\n        'bridgeblue',\n        'education',\n        'skills'\n    ];\n    const lowerResponse = response.toLowerCase();\n    // If response doesn't contain professional keywords, replace it\n    if (!professionalTopics.some((topic)=>lowerResponse.includes(topic))) {\n        return \"I'm here to discuss Shazil's professional background and achievements. What would you like to know about his product management experience, the S.C.A.L.E framework, or his career journey?\";\n    }\n    return response;\n};\n// Enhanced fallback responses for when Claude API is unavailable\nfunction generateFallbackResponse(message) {\n    const lowerMessage = message.toLowerCase();\n    // Check for off-topic requests\n    const offTopicKeywords = [\n        'weather',\n        'sports',\n        'politics',\n        'personal',\n        'dating',\n        'religion',\n        'cooking',\n        'travel',\n        'movie',\n        'music',\n        'game',\n        'joke',\n        'story'\n    ];\n    if (offTopicKeywords.some((keyword)=>lowerMessage.includes(keyword))) {\n        return \"I'm here to discuss Shazil's professional background and achievements. Ask me about his product management experience, the S.C.A.L.E framework, or his career journey!\";\n    }\n    if (lowerMessage.includes('scale') || lowerMessage.includes('framework')) {\n        return `The S.C.A.L.E framework is Shazil's signature product management methodology focusing on:\n\nScalable - Building systems that grow with your product\nCustomizable - Adapting to different team needs  \nAgile - Embracing iterative development\nLean - Eliminating waste and focusing on value\nExecution - Driving results through clear action\n\nThis framework has achieved:\n• 20-45% reduction in project delays\n• 15-30% increase in on-time deliveries\n• Adoption across multiple organizations\n\nLearn more at: scaleframework.notion.site\n\nFor detailed discussions, reach out to Shazil directly at snsindhu@gmail.com`;\n    }\n    if (lowerMessage.includes('experience') || lowerMessage.includes('background')) {\n        return `Shazil has 10+ years of product management experience:\n\n🎯 **Current Role**: Group Product Manager at Stukent (EdTech)\n📈 **Key Achievements**: \n   • Scaled products to $27M+ revenue\n   • Served 1M+ users across platforms\n   • Led teams of 20+ across 3 countries (Pakistan, Australia, US)\n   • Increased user engagement by 140%\n\n🏢 **Previous Companies**: \n   • Halfort (HealthTech) - Head of Product (US)\n   • BridgeBlue (EdTech) - Lead Product Manager (Sydney, Australia)\n\n🎓 **Education**: BBA (Hons) from Lahore School of Economics (Pakistan)\n🏆 **Certifications**: CSPO, Google Data Analytics, AI/ML\n\nContact: snsindhu@gmail.com for detailed discussions!`;\n    }\n    if (lowerMessage.includes('ai') || lowerMessage.includes('artificial intelligence')) {\n        return `Shazil is an AI-driven product leader with expertise in:\n\n🤖 **AI Product Development**:\n   • Designed AI explainer and scoring algorithms at Stukent\n   • Increased user engagement by 140% through AI implementation\n   • Experience with TensorFlow, OpenAI APIs, ML frameworks\n\n📊 **AI & Analytics**:\n   • SQL, Tableau, Mixpanel, Amplitude\n   • A/B testing and experimentation\n   • Data-driven decision making\n\n☁️ **Technical Platforms**: AWS, Azure, Google Cloud\n🔗 **APIs**: REST APIs, GraphQL development\n\nHe's passionate about using AI to create better user experiences and drive business growth.\n\nInterested in discussing AI strategy? Contact Shazil at snsindhu@gmail.com`;\n    }\n    if (lowerMessage.includes('revenue') || lowerMessage.includes('money') || lowerMessage.includes('business')) {\n        return `Shazil has a proven track record of driving business results:\n\n💰 **Revenue Impact**:\n   • Generated $27M+ total revenue across platforms\n   • Scaled healthcare platform to $10M+ ARR at Halfort\n   • Created loyalty program generating $17M+ at BridgeBlue\n\n📈 **Growth Metrics**:\n   • 230% increase in applications (BridgeBlue)\n   • 150% increase in patient payments (Halfort)\n   • 90% user adoption within first month\n   • 30% YoY revenue growth at Stukent\n\n🎯 **Business Skills**:\n   • 0-to-1 product building\n   • Cross-functional team leadership (20+ members)\n   • Strategic product roadmapping\n   • Market expansion across 3 countries\n\nWant to discuss growth strategies? Reach out: snsindhu@gmail.com`;\n    }\n    // Default response\n    return `Thanks for your question about Shazil! I'd love to help you learn more about his:\n\n🚀 **10+ years** of product management experience\n💼 **Leadership** of 20+ person cross-functional teams  \n📊 **S.C.A.L.E framework** adopted by multiple organizations\n🌍 **International experience** across 3 countries (Pakistan, Australia, US)\n💰 **$27M+ revenue** generated across platforms\n👥 **1M+ users** served with innovative solutions\n\nFor specific questions about his experience, achievements, or the S.C.A.L.E framework, please ask more details!\n\nOr contact Shazil directly: snsindhu@gmail.com | in/shazilsindhu`;\n}\nasync function handler(req, res) {\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            error: 'Method not allowed'\n        });\n    }\n    const { message, systemPrompt } = req.body;\n    if (!message) {\n        return res.status(400).json({\n            error: 'Message is required'\n        });\n    }\n    // Additional server-side filtering\n    if (message.length > 300) {\n        return res.status(400).json({\n            error: 'Message too long'\n        });\n    }\n    try {\n        const response = await fetch('https://api.anthropic.com/v1/messages', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-api-key': process.env.CLAUDE_API_KEY,\n                'anthropic-version': '2023-06-01'\n            },\n            body: JSON.stringify({\n                model: 'claude-3-5-sonnet-20241022',\n                max_tokens: 8000,\n                temperature: 0.1,\n                system: systemPrompt,\n                messages: [\n                    {\n                        role: 'user',\n                        content: message\n                    }\n                ]\n            })\n        });\n        if (!response.ok) {\n            console.error('Claude API error:', response.status, response.statusText);\n            throw new Error(`Claude API error: ${response.status}`);\n        }\n        const data = await response.json();\n        // Extract and filter the text content from Claude's response\n        let aiResponse = data.content[0].text;\n        aiResponse = filterResponse(aiResponse); // Apply filtering\n        return res.status(200).json({\n            response: aiResponse,\n            usage: data.usage // Optional: track token usage\n        });\n    } catch (error) {\n        console.error('API Error:', error);\n        // Return a fallback response that still provides value\n        const fallbackResponse = generateFallbackResponse(message);\n        return res.status(200).json({\n            response: fallbackResponse,\n            fallback: true\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/chat.js\n");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fchat&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fchat.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();